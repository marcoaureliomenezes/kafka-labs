---
version: '3'

##########################################################################################
#########################    DEPLOYMENT CONFIGS FOR NODES    #############################

x-common-restart-default: &common_restart_policy
  restart_policy:
    condition: on-failure

x-common-network: &common_network
  networks:
    - cluster_swarm_kafka

x-common-deploy-master: &common_deploy_master
  <<: *common_network
  deploy:
    <<: *common_restart_policy
    placement:
      constraints: [node.hostname == dadaia-desktop]

x-common-deploy-worker-1: &common_deploy_worker_1
  <<: *common_network
  deploy:
    <<: *common_restart_policy
    placement:
      constraints: [node.hostname == dadaia-HP-ZBook-15-G2]

x-common-deploy-worker-2: &common_deploy_worker_2
  <<: *common_network
  deploy:
    <<: *common_restart_policy
    placement:
      constraints: [node.hostname == dadaia-server-2]

x-common-deploy-worker-3: &common_deploy_worker_3
  <<: *common_network
  deploy:
    <<: *common_restart_policy
    placement:
      constraints: [node.hostname == dadaia-server]

##########################################################################################
#####################    NETWORK AND KAFKA CONFIGS    ####################################



x-default-healthcheck: &default_healthcheck
  interval: 10s
  timeout: 10s
  retries: 3


x-kafka-common-configs: &kafka_common_configs
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  KAFKA_JMX_PORT: 9101
  KAFKA_JMX_HOSTNAME: localhost
  KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}
  KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  CONFLUENT_METRICS_ENABLE: 'true'
  CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT


##########################################################################################
#############################    SERVICES    #############################################

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    <<: *common_deploy_master
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
      <<: *default_healthcheck
    volumes:
    - type: volume
      source: zookeeper_labs_vol_prod_data
      target: /var/lib/zookeeper/data
    - type: volume
      source: zookeeper_labs_vol_prod_log
      target: /var/lib/zookeeper/log
    - type: volume
      source: zookeeper_labs_vol_prod_secrets
      target: /etc/zookeeper/secrets
    

  broker-1:
    image: confluentinc/cp-server:7.6.0
    hostname: broker-1
    <<: *common_deploy_worker_1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://localhost:9092
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-1:29092
      <<: *kafka_common_configs
    volumes:
    - type: volume
      source: kafka_labs_broker_1_vol_prod_data
      target: /var/lib/kafka/data
    - type: volume
      source: kafka_labs_broker_1_vol_prod_secrets
      target: /etc/kafka/secrets
    healthcheck:
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
      <<: *default_healthcheck


  broker-2:
    image: confluentinc/cp-server:7.6.0
    hostname: broker-2
    <<: *common_deploy_worker_2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:29093,PLAINTEXT_HOST://localhost:9093
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-2:29093
      <<: *kafka_common_configs
    volumes:
    - type: volume
      source: kafka_labs_broker_2_vol_prod_data
      target: /var/lib/kafka/data
    - type: volume
      source: kafka_labs_broker_2_vol_prod_secrets
      target: /etc/kafka/secrets
    healthcheck:
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
      <<: *default_healthcheck
    

  broker-3:
    image: confluentinc/cp-server:7.6.0
    hostname: broker-3
    <<: *common_deploy_worker_3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:29094,PLAINTEXT_HOST://localhost:9094
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-3:29094
      <<: *kafka_common_configs
    volumes:
    - type: volume
      source: kafka_labs_broker_3_vol_prod_data
      target: /var/lib/kafka/data
    - type: volume
      source: kafka_labs_broker_3_vol_prod_secrets
      target: /etc/kafka/secrets
    healthcheck:
      <<: *default_healthcheck
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
    

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    <<: *common_deploy_worker_1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: FULL

  connect:
    image: marcoaureliomenezes/labs-kafka-connect:1.0.0
    hostname: connect
    restart: on-failure
    <<: *common_deploy_worker_1
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.5.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.0
    hostname: control-center
    <<: *common_deploy_worker_1
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021


  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.5.0
  #   depends_on:
  #     - broker-1
  #     - broker-2
  #     - broker-3
  #     - schema-registry
  #   ports:
  #     - 8082:8082
  #   hostname: rest-proxy
  #   container_name: rest-proxy
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-1:29092,broker-2:29093,broker-3:29094'
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'


volumes:
  zookeeper_labs_vol_prod_data:
  zookeeper_labs_vol_prod_log:
  zookeeper_labs_vol_prod_secrets:
  kafka_labs_broker_1_vol_prod_data:
  kafka_labs_broker_1_vol_prod_secrets:
  kafka_labs_broker_2_vol_prod_data:
  kafka_labs_broker_2_vol_prod_secrets:
  kafka_labs_broker_3_vol_prod_data:
  kafka_labs_broker_3_vol_prod_secrets:

networks:
  cluster_swarm_kafka:
    external: true