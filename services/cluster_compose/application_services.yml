---
version: '3'

x-common-network: &common_network
  networks:
    - learning_kafka

services:

  simple_producer:
    build: ../../docker/1_producers
    container_name: simple_producer
    environment:
      KAFKA_BROKERS: ${KAFKA_BROKERS_DEV}
      SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_TOPIC: 'simple.clients.bank'
      FREQUENCY: 0.01
    <<: *common_network
    restart: always
    volumes:
      - ../../docker/1_producers/src:/app
    #entrypoint: "python /app/1_simple_producer.py"

  simple_consumer_1:
    build: ../../docker/2_consumers
    container_name: simple_consumer_1
    environment:
      KAFKA_BROKERS: ${KAFKA_BROKERS_DEV}
      SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_TOPIC: 'simple.clients.bank'
      GROUP_ID: 'simple_consumer_2'
    <<: *common_network
    restart: always
    volumes:
      - ../../docker/2_consumers/src:/app
    #entrypoint: "python /app/2_at_least_once_proc.py"


  # avro_producer:
  #   build: ../../docker/1_producers
  #   container_name: avro_producer
  #   environment:
  #     KAFKA_BROKERS: ${KAFKA_BROKERS_DEV}
  #     SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  #     KAFKA_TOPIC: 'avro_serialized.clients'
  #     FREQUENCY: 0.0001
  #   <<: *common_network
  #   restart: always
  #   volumes:
  #     - ../../docker/1_producers/src:/app
  #   entrypoint: "python /app/2_avro_producer.py"

  # avro_consumer:
  #   build: ../../docker/2_consumers
  #   container_name: avro_consumer
  #   environment:
  #     KAFKA_BROKERS: ${KAFKA_BROKERS_DEV}
  #     SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  #     KAFKA_TOPIC: 'avro_serialized.clients'
  #     GROUP_ID: 'avro_consumer_cabulino'
  #     FREQUENCY: 1
  #   <<: *common_network
  #   restart: always
  #   volumes:
  #     - ../../docker/2_consumers/src:/app
    #entrypoint: "python /app/2_avro_consumer.py"


  # block_clock:
  #   build: ../docker/3_kafka_streams
  #   container_name: faust_stream_p1
  #   environment:
  #     KAFKA_BROKERS: 'broker0:29092,broker1:29093,broker2:29094'
  #     SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  #     KAFKA_TOPIC_1: 'mined.block.metadata'
  #     KAFKA_TOPIC_2: 'mined.transactions.hash_ids'
  #   <<: *common_network
  #   restart: always
  #   volumes:
  #     - ../docker/3_kafka_streams/src:/app


    # postgres_seeder:
    #   build: ../docker/4_kafka_connect/seeders
    #   container_name: postgres_seeder
    #   environment:
    #     POSTGRES_NAME: 'postgres'
    #     POSTGRES_USER: 'postgres'
    #     POSTGRES_PASSWORD: 'postgres'
    #   <<: *common_network
    #   restart: always
    #   volumes:
    #     - ../docker/4_kafka_connect/seeders/src:/app


networks:
  learning_kafka:
    name: learning_kafka